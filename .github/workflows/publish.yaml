on:
  workflow_call:
    secrets:
      GHCR_TOKEN:
        required: true

env:
  GHCR_ORG: ${{ vars.GHCR_ORG }}
  GHCR_USER: ${{ vars.GHCR_USER }}
  GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}

jobs:
  publish_artifact:
    name: Publish release artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
          token: ${{ secrets.GHCR_TOKEN }}
      - uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_TOKEN }}
      - name: version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USER }}
          password: ${{ env.GHCR_TOKEN }}
      - uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: GoogleContainerTools/skaffold
          tag: v1.38.0
          cache: enable
          extension-matching: disable
          rename-to: skaffold
          chmod: 0755
      # TODO create just receipe
      - name: publish
        run: |
          helm registry login ghcr.io -u ${{ env.GHCR_USER }} -p ${{ env.GHCR_TOKEN }}

          skaffold build -t ${{ env.VERSION }}
          just publish ${{ env.VERSION }}
          helm dep up
          helm package --version ${{ env.VERSION }} --app-version ${{ env.VERSION }} .
          helm push ${{ github.event.repository.name }}-${{ env.VERSION }}.tgz oci://ghcr.io/${{ vars.GHCR_ORG }}/helm
      - id: hasRego
        run: |
          if [ "$(find src/ -name '*.rego' ! -name 'entrypoints.rego' 2>/dev/null | wc -l)" -gt 0 ]; then
            echo "HAS_REGO=true" >> $GITHUB_ENV
          fi
      - if: ${{ env.HAS_REGO == 'true' }}
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: opcr-io/policy
          tag: v0.1.44
          cache: enable
      # TODO create just receipe
      - if: ${{ env.HAS_REGO == 'true' }}
        run: |
          echo ${{ secrets.GHCR_TOKEN }} | policy login -s ghcr.io -u ${{ env.GHCR_USER }} --password-stdin
          policy build -t ghcr.io/${{ vars.GHCR_ORG }}/opa/${{ github.event.repository.name }}:${{ env.VERSION }} src/
          policy push ghcr.io/${{ vars.GHCR_ORG }}/opa/${{ github.event.repository.name }}:${{ env.VERSION }}
      - run: |
          REL_ID=$(gh api -X GET repos/{owner}/{repo}/releases --jq '.[] | select(.tag_name == "${{ env.VERSION }}") | .id' || true)
          gh api -X PATCH repos/{owner}/{repo}/releases/${REL_ID} -F prerelease=false -F name=${{ env.VERSION }} || true
      - uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: update.yaml
          repo: ${{ vars.GHCR_ORG }}/orch-${{ vars.NDVR_DEV }}
          token: ${{ secrets.GHCR_TOKEN }}
          ref: main
          inputs: '{"repository": "${{ github.event.repository.name }}", "version": "${{ env.VERSION }}"}'
